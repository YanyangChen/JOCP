//************ Class(es) ***************



//************ Main Method ***************

File f = new File("c:\\javaex\\file11.txt ");
System.out.println(f.toString());
System.out.println(f.getName());
System.out.println(f.getParent());
System.out.println(f.getAbsolutePath());
try {
    System.out.println(f.getCanonicalPath());
} catch (IOException e) {}
System.out.println(f.getPath());
System.out.println(f.toURI());
System.out.println(f.exists());
System.out.println(f.lastModified());
System.out.println(f.isFile());
System.out.println(f.isDirectory());
System.out.println(f.isHidden());
System.out.println(f.canRead());
System.out.println(f.canWrite());
System.out.println(f.canExecute());
System.out.println(f.isAbsolute());
System.out.println(f.length());
System.out.println();

for (File fileroot : File.listRoots() ) {
    System.out.println(fileroot);
    System.out.println(fileroot.getTotalSpace());
    System.out.println(fileroot.getUsableSpace());
    if (fileroot.list() != null) {
        for (File f : fileroot.listFiles()) {
            System.out.println(f);
        }
    }
    System.out.println();
}
System.out.println();

File dir = new File("c:/javaex/testdir1");
dir.mkdir();
File f1 = new File(dir, "testfile.txt");
try {
    f1.createNewFile();                 
} catch (IOException ex) {
    System.out.println(ex);
}
try {
    System.in.read();
} catch (IOException ex) {
    System.out.println(ex);
}
f1.deleteOnExit();

File file1 = new File("c:\\javaex\\file1.txt");
java.nio.file.Path path1 = file1.toPath();
System.out.println(path1 + " is a object of " + path1.getClass());
java.nio.file.Path path2 = java.nio.file.Paths.get("c:\\javaex\\file1.txt");
File file2 = path2.toFile();
System.out.println(file2 + " is a object of " + file2.getClass());



//************ Other Setup ***************

import java.io.*;
